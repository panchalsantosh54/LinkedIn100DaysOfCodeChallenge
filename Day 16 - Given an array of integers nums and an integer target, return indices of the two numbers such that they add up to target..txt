📍 Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.

Input: nums = [3,2,4], target = 6
Output: [1,2]

Code:
package CodingChallengeOf100Days;

import java.util.HashMap;
import java.util.Map;

public class TwoSum {
 public static void main(String[] args) {
 TwoSum solTwoSum = new TwoSum();
 int nums[] = {3, 2, 4};
 int target = 6;
 int[] result = solTwoSum.twoSum(nums, target);
 System.out.println("Indices of the two numbers: [" + result[0] + ", " + result[1] + "]");

 }
 public int[] twoSum(int[] nums, int target) {
 Map<Integer, Integer> numMap = new HashMap<>();
 for (int i = 0; i < nums.length; i++) {
 int elementComp = target - nums[i];

 if (numMap.containsKey(elementComp)) {
 return new int[]{
 numMap.get(elementComp), i
 };
 }
 numMap.put(nums[i], i);
 }
// throw new IllegalArgumentException("No two elements add upto the target element");
 return nums;
 }
}