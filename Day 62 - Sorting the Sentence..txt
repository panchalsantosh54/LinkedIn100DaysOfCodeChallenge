Sorting the Sentence.

ðŸ“Œ A sentence is a list of words that are separated by a single space with no leading or trailing spaces. Each word consists of lowercase and uppercase English letters.

ðŸ“Œ A sentence can be shuffled by appending the 1-indexed word position to each word then rearranging the words in the sentence.

Example 1:
Input: s = "is2 Time1 precious3"
Output: "Time is precious"
Explanation: Sort the words in s to their original positions "This1 is2 a3 sentence4", then remove the numbers.

ðŸ“Œ In this program, we first split the input string s into an array of words using the split method.
ðŸ“Œ We create the new string array with the same length to store the output.
ðŸ“Œ To extract index, we loop through an array of words.
ðŸ“Œ Using substring method, we extract the number from the string.

Code:
package CodingChallengeOf100Days;

public class SortingSentence {
 public static void main(String[] args) {
 SortingSentence sortingSentence = new SortingSentence();
 System.out.println(sortingSentence.sortSentence("is2 Time1 precious3"));
 System.out.println(sortingSentence.sortSentence("than4 speak2 words5 louder3 Actions1"));
 }

 public String sortSentence(String sentence) {
 String[] words = sentence.split(" ");
 String[] wordsWithCorrectPosition = new String[words.length];

 for (String word : words) {
 int index = Character.getNumericValue(word.charAt(word.length() - 1));
 wordsWithCorrectPosition[index - 1] = word.substring(0, word.length() - 1);
 }
 return String.join(" ", wordsWithCorrectPosition);
 }
}