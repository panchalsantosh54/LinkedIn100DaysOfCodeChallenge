📍 Handling WebElementPArtialScreenshot in Selenium.

📌 Navigate to the desired page: 
📌 Find the element to capture:
📌 Take the partial screenshot:
📌 Define the destination path for the screenshot:
📌 Save the partial screenshot:

File fName= ((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);

FileUtils.copyFile(fName, new File("D:\\screenshot.jpg"));

Code:
package CodingChallengeOf100Days;

import io.github.bonigarcia.wdm.WebDriverManager;
import org.apache.commons.io.FileUtils;
import org.openqa.selenium.By;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;

import java.io.File;
import java.io.IOException;

public class WebElementPArtialScreenshotDemo {
 public static void main(String[] args) throws IOException {
 WebDriverManager.chromedriver().setup();
 WebDriver driver = new ChromeDriver();
 driver.get("https://lnkd.in/dtcxgcbc");
 driver.manage().window().maximize();
 WebElement dropDownList = driver.findElement(By.xpath("//*[@id='multiple-select-example']"));

 fileCreationUsingFile(dropDownList, "dropDownList.png");
 driver.quit();
 }
 static void fileCreationUsingFile(WebElement dropDownList, String fileName) throws IOException {
 File fName = dropDownList.getScreenshotAs(OutputType.FILE);

 String destFileName = System.getProperty("user.dir") + "\\src\\test\\resource\\ScreenshotPkg\\"
 + fileName + "_" + System.currentTimeMillis();
 FileUtils.copyFile(fName, new File(destFileName));
 }
}